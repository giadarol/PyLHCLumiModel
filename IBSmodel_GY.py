#!/usr/bin/python

import cmath
from math import *
import numpy 
from scipy.constants import c

ene_tol_GeV = 20.

def IBSmodel(IBSON, gamma, bunch_intensity_p,ex_norm_m,ey_norm_m,bl_4sigma_s,VRF_V,dt_s):
    
    En = gamma*0.93828
    Nb = bunch_intensity_p*1e-11
    ex0 = ex_norm_m*1e6
    ey0 = ey_norm_m*1e6
    bl0 = bl_4sigma_s*1e9
    V0 = VRF_V/1e6
    t = dt_s/60.
    
    if IBSON==True or IBSON==1:
    
        #print 'Energy', En
        if fabs(En-6500)<ene_tol_GeV:
            tauxy=64.6*60
            
            if V0==12:
                a00=5.8128e-06*t**1.9244;
                a01=0.033455*t**0.71595-4.3735;
                a10=0.0033935*t**0.92978;
                a11=0.0069376*t**0.8735-1.6269;
                b00=1.6958e-07*t**1.9284+1.1511e-05;
                b01=0.069374*t**0.69181-4.6381;
                b10=1.4673e-07*t**2-5.5269e-05*t+5.0618e-05;
                b11=-0.00028513*t**1.7199+2.6338;
                b20=-0.0005309*t**0.99039+1.0001;
                b21=1.6569e-07*t**2-5.2329e-06*t+5.223e-05;
            
                a00l=2.6454e-06*t**2+1.925e-05*t-8.4302e-05;
                a01l=11.6706*t**-0.049427-10.9141;
                a02l=-7.5066e-08*t**2+1.2167e-05*t+1.9744e-05;
                a10l=0.0012145*t**0.92003;
                a11l=0.0062127*t**1.1036-1.3455;
                a12l=-4.8327e-07*t**2.3482;
                b00l=7.7846e-07*t**2+3.5015e-05*t-4.6149e-05;
                b01l=0.00014708*t**2-0.019588*t-0.70599;
                b02l=-9.6701e-09*t**2+1.8945e-06*t-1.6834e-05;
                b10l=-4.9054e-07*t**2+0.00086599*t+0.55636;
                b11l=2.5997e-07*t**2+8.1857e-06*t-7.235e-05;
                b12l=4.1863e-07*t**2-0.0014262*t+0.44368;
            elif V0==10:
                a00=8.1034e-06*t**1.8783;
                a01=0.28811*t**0.36532-4.6617;
                a10=0.0037095*t**0.90923;
                a11=0.020951*t**0.72569-1.5621;
                b00=2.6472e-07*t**1.8488+1.4178e-05;
                b01=0.042724*t**0.85404-4.1085;
                b10=2.2905e-07*t**2+-6.3663e-05*t+6.6759e-05;
                b11=-0.0012795*t**1.5417+2.2332;
                b20=-0.00051568*t**0.99814+0.99999;
                b21=4.2472e-07*t**2-9.6913e-06*t+6.8151e-05;
            
                a00l=3.8677e-06*t**2+0.00014648*t-0.0013837;
                a01l=14.9302*t**-1.3934-1.9835;
                a02l=-4.9863e-08*t**2+3.6098e-06*t+1.3622e-05;
                a10l=0.001452*t**0.8945;
                a11l=0.090579*t**0.61505-1.6815;
                a12l=-8.2446e-07*t**2.3908;
                b00l=1.851e-06*t**2+0.00013284*t-0.00057515;
                b01l=0.00021686*t**2+-0.022711*t-0.86553;
                b02l=-5.0828e-08*t**2+4.1981e-06*t-3.0944e-05;
                b10l=-4.4717e-07*t**2+0.0018648*t+0.54738;
                b11l=2.4981e-07*t**2+4.9872e-05*t-0.00040738;
                b12l=1.6328e-07*t**2+-0.0024397*t+0.45289;   
            elif V0==8:
                a00=1.0093e-05*t**1.8717;
                a01=-6.876*t**-0.46105+-2.3664;
                a10=0.0040721*t**0.89564;
                a11=0.019936*t**0.74094+-1.5277;
                b00=4.5268e-07*t**1.7642+1.8187e-05;
                b01=0.093895*t**0.67778+-3.972;
                b10=3.0534e-07*t**2+-7.5303e-05*t+7.9589e-05;
                b11=-0.0013357*t**1.5252+2.0487;
                b20=-1.2699e-08*t**2+-0.00050988*t+0.99997;
                b21=4.6533e-07*t**2+-1.3315e-05*t+7.2448e-05;
            
        elif abs(En-7000)<ene_tol_GeV:
            tauxy=51.79833076*60;

            a00=5.1987e-06*t**1.9415;
            a01=0.018282*t**0.83002-4.2914;
            a10=0.0032374*t**0.93508;
            a11=0.0062827*t**0.89334-1.6245;
            b00=1.547e-07*t**1.9416+1.0489e-05;
            b01=0.064587*t**0.70466-4.6279;
            b10=1.3308e-07*t**2-5.3766e-05*t+4.998e-05;
            b11=-0.00025467*t**1.7402+2.6232;
            b20=-0.0006784*t**0.98408+1.0001;
            b21=1.6052e-07*t**2-5.1973e-06*t+5.2314e-05;

            a00l=2.5149e-06*t**2+1.8552e-05*t-2.2517e-05;
            a01l=-3.8476*t**0.09162+4.3565;
            a02l=-9.5113e-08*t**2+1.6066e-05*t+2.0409e-05;
            a10l=0.0011588*t**0.92637;
            a11l=0.0060754*t**1.1078-1.3471;
            a12l=-5.7847e-07*t**2.2954;
            b00l=7.7172e-07*t**2+3.2533e-05*t-3.1935e-05;
            b01l=0.00014293*t**2-0.01935*t-0.70398;
            b02l=-8.7952e-09*t**2+1.8045e-06*t-1.6533e-05;
            b10l=-2.7508e-07*t**2+0.00075061*t+0.55646;
            b11l=2.6594e-07*t**2+7.1229e-06*t-6.3951e-05;
            b12l=3.0086e-07*t**2-0.0014477*t+0.44358;
            
        elif abs(En-3500)<ene_tol_GeV:
            tauxy=414.3866126*60;

            a00=1.2913e-05*t**1.8328;
            a01=8.7273*t**0.036932-13.7139;
            a10=0.0048836*t**0.89352;
            a11=0.020725*t**0.71972-1.6286;
            b00=3.48e-07*t**1.8399+2.276e-05;
            b01=0.14091*t**0.61852-4.7483;
            b10=3.092e-07*t**2-7.2001e-05*t+7.0548e-05;
            b11=-0.0012338*t**1.5413+2.535;
            b20=-1.2762e-07*t**2+-7.7314e-05*t+0.99997;
            b21=4.2423e-07*t**2+-8.9684e-06*t+6.4947e-05;

            a00l=3.6106e-06*t**2+0.00017934*t-0.0015647;
            a01l=0.00017151*t**2+-0.010977*t-2.1544;
            a02l=-2.7919e-08*t**2+9.5164e-07*t-2.7625e-06;
            a10l=0.0016237*t**0.88689;
            a11l=0.045355*t**0.73206-1.5097;
            a12l=-9.1505e-07*t**2.3506;
            b00l=1.537e-06*t**2+9.89e-05*t-0.00043829;
            b01l=0.00023207*t**2-0.025082*t-0.76486;
            b02l=-4.0587e-08*t**2+3.9996e-06*t-2.5577e-05;
            b10l=-1.2286e-06*t**2+0.001911*t+0.55332;
            b11l=2.5981e-07*t**2+3.9452e-05*t-0.00031498;
            b12l=8.214e-07*t**2-0.002022*t+0.44689;

        a0l=a00l*ex0**a01l+a02l;
        a1l=a10l*ex0**a11l+a12l;
        b0l=b00l*ex0**b01l+b02l;
        b1l=b10l*ex0**b11l+b12l;

        C0l=a1l*Nb+a0l;
        ccSRl=b0l*Nb+b1l;

        ey=ey0*exp(-t/(2*tauxy));

        IBSl=C0l*bl0**-3.3+ccSRl;
        bl=IBSl*bl0;

        a0=a00*bl0**a01;
        a1=a10*bl0**a11;
        b0=b00*bl0**b01;
        b1=b10*bl0**b11;
        b2=b20*bl0**b21;

        C0=a1*Nb+a0;
        ccSR=b0*Nb**2+b1*Nb+b2;

        IBSx=ccSR+C0/ex0**2;
        ex=IBSx*ex0;
        
        ex_out_norm_m = ex*1e-6
        ey_out_norm_m = ey*1e-6
        bl_out_4sigma_s =  bl*1e-9
    
    else:
        ex_out_norm_m = ex_norm_m
        IBSx = 0.
        bl_out_4sigma_s = bl_4sigma_s
        IBSl = 0.
        ey_out_norm_m = ey_norm_m

    return ex_out_norm_m, IBSx, bl_out_4sigma_s, IBSl, ey_out_norm_m 

#~ test=IBSmodel(6500,1,3.3,3.3,1.25,12,10);
#~ print 'test=',test
	
	
